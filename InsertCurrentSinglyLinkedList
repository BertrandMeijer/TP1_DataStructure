class Node {
    int data;
    Node next;
 
    Node(int data) {
        this.data = data;
        next = null;
    }
}
 
class LinkedList {
    Node head;
 
    // Inserts a new node at the front of the list
    void push(int new_data) {
        Node new_node = new Node(new_data);
        new_node.next = head;
        head = new_node;
    }
 
    // Appends a new node at the end of the list
    void append(int new_data) {
        Node new_node = new Node(new_data);
 
        if (head == null) {
            head = new_node;
            return;
        }
 
        Node last = head;
        while (last.next != null) {
            last = last.next;
        }
 
        last.next = new_node;
    }

    // Inserts a new node at the given position
    void insertAtPosition(int new_data, int pos) {
        Node new_node = new Node(new_data);
        if (pos == 0) {
            new_node.next = head;
            head = new_node;
            return;
        }

        Node current = head;
        for (int i = 0; current != null && i < pos - 1; i++) {
            current = current.next;
        }

        // If the position is greater than the number of nodes
        if (current == null || current.next == null) {
            System.out.println("Position out of bounds");
            return;
        }

        new_node.next = current.next;
        current.next = new_node;
    }
 
    // Prints the contents of the linked list
    void printList() {
        Node node = head;
        while (node != null) {
            System.out.print(node.data + " ");
            node = node.next;
        }
    }
}
 
public class Main {
    public static void main(String[] args) {
        LinkedList linkedList = new LinkedList();
 
        // Insert nodes at the beginning of the linked list
        linkedList.push(3);
        linkedList.push(2);
        linkedList.push(1);
 
        System.out.print("Created Linked list is: ");
        linkedList.printList();
 
        // Insert 4 at the end
        linkedList.append(4);
 
        System.out.print("\nAfter inserting 4 at the end: ");
        linkedList.printList();

        // Insert 5 at position 2
        linkedList.insertAtPosition(5, 2);
 
        System.out.print("\nAfter inserting 5 at position 2: ");
        linkedList.printList();
    }
}
